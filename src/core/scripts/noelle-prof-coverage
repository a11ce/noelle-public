#!/bin/bash -e

SOURCE=${BASH_SOURCE[0]}
while [ -L "${SOURCE}" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR=$( cd -P "$( dirname "${SOURCE}" )" >/dev/null 2>&1 && pwd )
  SOURCE=$(readlink "${SOURCE}")
  # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
  [[ ${SOURCE} != /* ]] && SOURCE=$DIR/$SOURCE 
done
installDir=$(realpath $( cd -P "$( dirname "${SOURCE}" )" >/dev/null 2>&1 && pwd )/..)

# Fetch the inputs
if test $# -lt 2 ; then
  echo "USAGE: `basename $0` SRC_BC BINARY [LIBRARY]*" ;
  exit 0;
fi
srcBC="$1" ;
profExec="$2" ;
libs="${@:3}" ;

# Local variables
profBC="${profExec}.bc" ;

# Clean
rm -f $profExec *.profraw ;

# Inject code needed by the profiler
opt -pgo-instr-gen -instrprof $srcBC -o $profBC ;

# Generate the binary
clang $profBC -fprofile-instr-generate ${libs} -o $profExec ;

# Clean
rm $profBC ;
